{"version":3,"sources":["index.js","lang/en_US.js","lang/zh_CN.js","register.js","format.js","utils/date.js","realtime.js","utils/dom.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;ACFA,AJYA,ACHA,ACHA,ACHA;ACFA,AJYA,ACHA,ACHA,ACHA;ACFA,AJYA,ACHA,ACHA,ACHA;ACFA,AJYA,ACHA,ACHA,ACHA,AENA;ADIA,AJYA,AENA,ACHA,AENA;ADIA,AJYA,AGTA,AENA;ADIA,AJYA,AMlBA,AHSA,AENA;ADIA,AJYA,AMlBA,AHSA,AENA;ADIA,AJYA,AMlBA,AHSA,AENA;ADIA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;AHUA,AENA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,AHSA,AENA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar en_US_1 = __importDefault(require(\"./lang/en_US\"));\nvar zh_CN_1 = __importDefault(require(\"./lang/zh_CN\"));\nvar register_1 = require(\"./register\");\nexports.register = register_1.register;\nregister_1.register('en_US', en_US_1.default);\nregister_1.register('zh_CN', zh_CN_1.default);\nvar format_1 = require(\"./format\");\nexports.format = format_1.format;\nvar realtime_1 = require(\"./realtime\");\nexports.render = realtime_1.render;\nexports.cancel = realtime_1.cancel;\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nfunction default_1(diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\nexports.default = default_1;\n//# sourceMappingURL=en_US.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nfunction default_1(diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\nexports.default = default_1;\n//# sourceMappingURL=zh_CN.js.map","\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexports.register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexports.getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar date_1 = require(\"./utils/date\");\nvar register_1 = require(\"./register\");\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexports.format = function (date, locale, opts) {\n    // diff seconds\n    var sec = date_1.diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return date_1.formatDiff(sec, register_1.getLocale(locale));\n};\n//# sourceMappingURL=format.js.map","\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nfunction toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\nexports.toDate = toDate;\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nfunction formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\nexports.formatDiff = formatDiff;\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nfunction diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\nexports.diffSec = diffSec;\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nfunction nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\nexports.nextInterval = nextInterval;\n//# sourceMappingURL=date.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dom_1 = require(\"./utils/dom\");\nvar date_1 = require(\"./utils/date\");\nvar register_1 = require(\"./register\");\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(dom_1.getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = date_1.diffSec(date, relativeDate);\n    // render\n    node.innerText = date_1.formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(date_1.nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    dom_1.setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nfunction cancel(node) {\n    // cancel one\n    if (node)\n        clear(dom_1.getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\nexports.cancel = cancel;\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nfunction render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, dom_1.getDateAttribute(node), register_1.getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\nexports.render = render;\n//# sourceMappingURL=realtime.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nfunction getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\nexports.getDateAttribute = getDateAttribute;\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nfunction setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\nexports.setTimerId = setTimerId;\n/**\n * get the timer id\n * @param node\n */\nfunction getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\nexports.getTimerId = getTimerId;\n//# sourceMappingURL=dom.js.map"]}